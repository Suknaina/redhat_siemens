- name: Trim attribute_choice
  set_fact:
    attribute_choice_trimmed: "{{ attribute_choice | trim }}"

- name: Map choice to attribute_name (using trimmed attribute_choice)
  set_fact:
    attribute_name: >-
      {% if attribute_choice_trimmed == 'Business Group' %}Business Group
      {% elif attribute_choice_trimmed == 'Location' %}Location
      {% elif attribute_choice_trimmed == 'Network' %}Network
      {% else %}{{ attribute_choice_trimmed }}{% endif %}

- name: Debug attribute_name
  debug:
    var: attribute_name

- name: Normalize values_string (handle newline-separated input)
  set_fact:
    values_string_normalized: "{{ values_string | replace('\n', ',') }}"

- name: Parse normalized values_string into list
  set_fact:
    values_list: "{{ values_string_normalized.split(',') | map('trim') | list }}"

- name: Debug values_list
  debug:
    var: values_list

- name: Include user detail tasks
  include_role:
    name: vm_provision
    tasks_from: user_details.yml

- name: Initialize row values dict with empty strings
  set_fact:
    row_values:
      Business Group: ""
      Location: ""
      Network: ""
      User name: "{{ launched_by }}"
      User mail: "{{ user_email }}"

- name: Insert values into the correct attribute key
  set_fact:
    row_values: "{{ row_values | combine({ (attribute_name | string): values_list | join(';') }) }}"

- name: Debug row_values
  debug:
    var: row_values

- name: Format CSV line string
  set_fact:
    new_csv_line: "{{ row_values['Business Group'] }},{{ row_values['Location'] }},{{ row_values['Network'] }},{{ row_values['User name'] }},{{ row_values['User mail'] }}"

- name: Ensure CSV file exists with header
  lineinfile:
    path: "/tmp/attribute_values.csv"
    line: "Business Group,Location,Network,User name,User mail"
    create: yes
    state: present
    insertafter: BOF

- name: Append new CSV line to CSV file
  lineinfile:
    path: "/tmp/attribute_values.csv"
    line: "{{ new_csv_line }}"
    insertafter: EOF

- name: Move CSV file to Git repo before commit
  copy:
    src: /tmp/attribute_values.csv
    dest: "/var/lib/awx/projects/sukanya/siemens/redhat_siemens/meta_files/attribute_values.csv"
    remote_src: yes
