- name: Normalize attribute_choice
  set_fact:
    attribute_choice_normalized: "{{ attribute_choice | trim | lower }}"

- name: Map normalized choice to proper attribute_name
  set_fact:
    attribute_name: >-
      {% if attribute_choice_normalized == 'business group' %}Business Group
      {% elif attribute_choice_normalized == 'location' %}Location
      {% elif attribute_choice_normalized == 'network' %}Network
      {% else %}{{ attribute_choice | trim }}{% endif %}

- name: Final strip of attribute_name to remove any hidden whitespace
  set_fact:
    attribute_name: "{{ attribute_name | trim }}"

- name: Normalize values_string (handle newline-separated input)
  set_fact:
    values_string_normalized: "{{ values_string | replace('\n', ',') }}"

- name: Include tasks to fail if value exists else add value to the file
  include_tasks: fail_if_value_exists_else_add.yml

- name: Parse normalized values_string into list
  set_fact:
    values_list: "{{ values_string_normalized.split(',') | map('trim') | list }}"

- name: Include user detail tasks
  include_role:
    name: vm_provision
    tasks_from: user_details.yml

- name: Initialize row values dict with empty strings
  set_fact:
    row_values:
      Business Group: ""
      Location: ""
      Network: ""
      User name: "{{ launched_by }}"
      User mail: "{{ user_email }}"

- name: Insert values into the correct attribute key
  set_fact:
    row_values: >-
      {{
        row_values | combine({
          attribute_name: values_list | map('string') | map('regex_replace', '^', "'") | map('regex_replace', '$', "'") | join('')
        })
      }}

- name: Set current date
  set_fact:
    current_date: "{{ lookup('pipe', 'date +%Y-%m-%d') }}"
    
- name: Format CSV line string
  set_fact:
    new_csv_line: "{{ row_values['Business Group'] }},{{ row_values['Location'] }},{{ row_values['Network'] }},{{ row_values['User name'] }},{{ row_values['User mail'] }},{{ current_date }}"

- name: Ensure CSV file exists with header
  become: yes
  lineinfile:
    path: "/var/lib/awx/projects/sukanya/siemens/redhat_siemens/meta_files/attribute_values_report.csv"
    line: "Business Group,Location,Network,User name,User mail,Date"
    create: yes
    state: present
    insertafter: BOF

- name: Append new CSV line to CSV file
  become: yes
  lineinfile:
    path: "/var/lib/awx/projects/sukanya/siemens/redhat_siemens/meta_files/attribute_values_report.csv"
    line: "{{ new_csv_line }}"
    insertafter: EOF
