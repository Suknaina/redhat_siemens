- name: Map choice to attribute_name (optional if you use dropdown directly)
  set_fact:
    attribute_name: >-
      {% if attribute_choice == 'Business Group' %}Business Group
      {% elif attribute_choice == 'Location' %}Location
      {% elif attribute_choice == 'Network' %}Network
      {% else %}{{ attribute_choice }}{% endif %}

- name: Parse values_string into list
  set_fact:
    values_list: "{{ values_string.split(',') | map('trim') | list }}"

- name: Include user detail tasks
  include_role:
    name: vm_provision
    tasks_from: user_details.yml

- name: Initialize row values dict with empty strings
  set_fact:
    row_values:
      Business Group: ""
      Location: ""
      Network: ""
      User name: "{{ launched_by }}"
      User mail: "{{ user_email }}"

- name: Insert values into the correct attribute key
  set_fact:
    row_values: >-
      {{
        row_values.update({ attribute_name: values_list | join(';') }) or row_values
      }}

- name: Format CSV line string
  set_fact:
    new_csv_line: "{{ row_values['Business Group'] }},{{ row_values['Location'] }},{{ row_values['Network'] }},{{ row_values['User name'] }},{{ row_values['User mail'] }}"

- name: Ensure CSV file exists with correct header
  lineinfile:
    path: "/tmp/attribute_values.csv"
    line: "Business Group,Location,Network,User name,User mail"
    create: yes

- name: Append new CSV line to CSV file
  lineinfile:
    path: "/tmp/attribute_values.csv"
    line: "{{ new_csv_line }}"
    insertafter: EOF

