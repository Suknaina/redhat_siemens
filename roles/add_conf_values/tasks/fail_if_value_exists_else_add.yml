- name: Read existing attribute values from YAML file with sudo
  ansible.builtin.slurp:
    path: "{{ attribute_file_base_path }}/{{ attribute_name | lower | replace(' ', '_') }}.yml"
  register: attribute_file_content
  failed_when: attribute_file_content is failed
  become: yes

- name: Decode and parse YAML content
  set_fact:
    existing_values: "{{ attribute_file_content.content | b64decode | from_yaml }}"

- name: Ensure existing_values is a list
  set_fact:
    existing_values: >-
      {% if existing_values is string %}
        {{ [existing_values] }}
      {% else %}
        {{ existing_values }}
      {% endif %}

- name: Extract values to be added from values_string_normalized
  set_fact:
    values_to_add: "{{ values_string_normalized.split(',') | map('trim') | list }}"

- name: Fail if any value already exists
  fail:
    msg: "One or more values already exist in {{ attribute_name }} file: {{ values_to_add | select('in', existing_values) | list }}"
  when: values_to_add | select('in', existing_values) | list | length > 0

- name: Append new values to YAML file
  lineinfile:
    path: "{{ attribute_file_base_path }}/{{ attribute_name | lower | replace(' ', '_') }}.yml"
    line: "- {{ item }}"
    insertafter: EOF
    mode: '0644'
    create: yes
  loop: "{{ values_to_add }}"
  when: item not in existing_values
  become: yes

- name: Debug message when values added successfully
  debug:
    msg: "Values {{ values_to_add }} added successfully to {{ attribute_name }} file."
